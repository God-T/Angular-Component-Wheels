// maybe replace all flex with fxLayout?
.colour-picker-selected {
  display: flex;
  flex-direction: row;
  height: 20px;
  gap: 10px;

  & > div {
    width: 10px;
    height: 10px;
    border-radius: 4px;
  }
}

//perhaps rename .priority-select-option
.priority-option {
  display: flex;
  align-items: center;
  position: relative;

  & > mat-icon {
    position: absolute;
    right: 16px;
    margin-right: 0;
    color: gray;
    cursor: pointer;

    &:hover {
      color: red;
    }
  }
}

.edit-option-wrapper {
  padding-inline: 16px;
  height: 48px;
  width: 218px;
  margin: 0;

  & > span {
    line-height: 3em;
  }
}

.edit-option--hide {
  height: 0;
  opacity: 0;
}

.new-option-wrapper {
  height: 48px;
  display: flex;
  align-items: center;
  width: 250px;
  margin: 0;

  &__editor {
    width: 100%;
    padding-inline: 12px 15px;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;

    & > div:first-child {
      gap: 10px;
    }
    & > div:last-child {
      color: gray;

      & > mat-icon {
        cursor: pointer;

        &:hover {
          color: green;
        }
      }
    }

    & div {
      display: flex;
      flex-direction: row;
      align-items: center;
    }

    //to be replaced by Jerry's smart input component
    & input {
      width: 120px;
      height: 25px;
      border: none;
      padding: 0px;
      font-size: 16px;
      color: rgba(0, 0, 0, 0.87);
      border-bottom: 2px solid transparent;
      &:hover,
      &:focus {
        outline: none;
        border-color: gray;
      }
    }
  }

  &__toggle {
    display: flex;
    flex-direction: row;
    align-items: center;
    cursor: pointer;
    color: rgba(0, 0, 0, 0.87);
    padding-left: 9px;
    width: 100%;
    height: 100%;

    &:hover {
      background-color: #f5f5f5;
    }
    & > mat-icon {
      transform: scale(0.95);
      margin-right: 5px;
      color: rgba(0, 0, 0, 0.7);
    }
  }
}

.mat-option.mat-option-disabled {
  color: black;
}

::ng-deep .cdk-overlay-container .cdk-overlay-pane .priority-select-panel {
  min-width: 0 !important;
  min-height: 0 !important;
  max-width: 250px;
  max-height: 1000px;
  overflow-x: hidden;
  width: 250px;
  margin-top: 35px;
  margin-left: 8px;

  // [[[[[ use our scrollbar design, * need to make it work in our code base
  &::-webkit-scrollbar {
    width: 5px;
    height: 5px;
  }
  &::-webkit-scrollbar-track {
    background-color: #eee;
  }
  &::-webkit-scrollbar-thumb {
    box-shadow: inset 0 0 2px rgba(224, 223, 223, 0.699);
    border-radius: 5px;
    background: rgb(167 162 162 / 70%);
  }
  // ]]]]]]
}

/* to be deleted*/
// below style were copied from code base
// $highPriorityColor: #ed4345;
// $mediumPriorityColor: #6470ed;
// $lowPriorityColor: #fac14e;

// .priority-select-option {
//   background-color: var(--bg-colour-temp);

//   &::before {
//     content: "";
//     width: 10px;
//     height: 10px;
//     background-color: black;
//     display: inline-block;
//     border-radius: 50%;
//     margin-right: 10px;
//   }
// }

.priority-select-option {
  width: 10px;
  height: 10px;
  background-color: transparent;
  display: inline-block;
  border-radius: 50%;
  margin-right: 10px;
}

// .low-priority-option {
//   background-color: $lowPriorityColor;
// }

// .medium-priority-option {
//   background-color: $mediumPriorityColor;
// }

// .high-priority-option {
//   background-color: $highPriorityColor;
// }

// dynamic setting colours
// .low-option::before {
//   background-color: $lowPriorityColor;
// }

// .medium-option::before {
//   background-color: $mediumPriorityColor;
// }

// .high-option::before {
//   background-color: $highPriorityColor;
// }

.priority-select-indicator {
  content: "";
  display: inline-block;
  width: 12px;
  height: 12px;
  border-radius: 50%;
  background-color: transparent;
  margin-left: 7px;
  margin-right: 9px;
  margin-top: 2px;
}
/**/
